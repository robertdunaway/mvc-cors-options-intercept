{"version":3,"sources":["app.js"],"names":["mashupApp","angular","module","config","$ocLazyLoadProvider","loadedModules","$sceProvider","enabled","constant","qualityApi","anotherApi","revision","anotherConst"],"mappings":"AAMA,GAAIA,WAAYC,QAAQC,OAAO,aAAc,UAAW,eAAgB,aAAc,cAAe,aASrGD,SAAQC,OAAO,aAAaC,QAAQ,sBAAuB,SAAUC,GACjE,YACAA,GAAoBD,QAChBE,eAAgB,UAAW,eAAgB,aAAc,cAAe,kBAMhFL,UAAUG,QAAQ,eAAgB,SAAUG,GACxC,YACAA,GAAaC,SAAQ,MAUzBP,UAAUQ,SAAS,UAAYC,WAAc,2BACdC,WAAc,iBAE7CV,UAAUQ,SAAS,gBAAkBG,SAAY,SACZC,aAAgB","file":"app.min.js","sourcesContent":["// ALL GOOD IF NO ERRORS BELOW THIS LINE - I'm leaving this in the code to force the gulp-jshint-html-reporter pligin to update the html file.  If there are no errors then no report is written so you never know if your last JSHint error is fixed or not.\r\n\r\n// -------------------------------------------------------------------------\r\n// Kicks off the angularJS application\r\n// create the module and name it \"mashupApp\"\r\n// -------------------------------------------------------------------------\r\nvar mashupApp = angular.module('mashupApp', ['ngRoute', 'ui.bootstrap', 'ngSanitize', 'oc.lazyLoad', 'ngwidgets']);\r\n// -------------------------------------------------------------------------\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------\r\n// This configures ocLazyLoadProvider and let's it know that some modules have already been\r\n// loaded.  Without this the Menu dialog would not work because some directive was loaded twice.\r\n// https://github.com/ocombe/ocLazyLoad/issues/71\r\n// ----------------------------------------------------------------------------------------------\r\nangular.module('mashupApp').config(['$ocLazyLoadProvider', function ($ocLazyLoadProvider) {\r\n    'use strict';\r\n    $ocLazyLoadProvider.config({\r\n        loadedModules: ['ngRoute', 'ui.bootstrap', 'ngSanitize', 'oc.lazyLoad', 'ngwidgets']\r\n    });\r\n\r\n}]);\r\n\r\n// To disable $sce:\r\nmashupApp.config(['$sceProvider', function ($sceProvider) {\r\n    'use strict';\r\n    $sceProvider.enabled(false);\r\n}]);\r\n\r\n\r\n// ----------------------------------------------------------------------------------------------\r\n// Application Constants\r\n// ----------------------------------------------------------------------------------------------\r\n// WebApi Constants.  Values replaced by Gulp based on the desired environment.\r\n// Implementation described here: http://geekindulgence.com/environment-variables-in-angularjs-and-ionic/\r\n// ----------------------------------------------------------------------------------------------\r\nmashupApp.constant('apiUrl', { 'qualityApi': 'http://localhost:59657' },\r\n                             { 'anotherApi': 'someOtherUrl' });\r\n\r\nmashupApp.constant('appConstants', { 'revision': '9405' },\r\n                                   { 'anotherConst': 'someOtherConst' }); "],"sourceRoot":"/source/"}